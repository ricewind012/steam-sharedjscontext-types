export interface SteamClient {
	Apps: {
		AddShortcut(...args: any[]);
		BackupFilesForApp(...args: any[]);
		BrowseScreenshotForApp(...args: any[]);
		BrowseScreenshotsForApp(...args: any[]);
		CancelBackup(...args: any[]);
		CancelGameAction(...args: any[]);
		CancelLaunch(...args: any[]);
		ClearCustomArtworkForApp(...args: any[]);
		ClearCustomLogoPositionForApp(...args: any[]);
		ClearProton(...args: any[]);
		ContinueGameAction(...args: any[]);
		CreateDesktopShortcutForApp(...args: any[]);
		DownloadWorkshopItem(...args: any[]);
		GetAchievementsInTimeRange(...args: any[]);
		GetActiveGameActions(...args: any[]);
		GetAvailableCompatTools(...args: any[]);
		GetBackupsInFolder(...args: any[]);
		GetCachedAppDetails(...args: any[]);
		GetCloudPendingRemoteOperations(...args: any[]);
		GetCompatExperiment(...args: any[]);
		GetConflictingFileTimestamps(...args: any[]);
		GetDetailsForScreenshotUpload(...args: any[]);
		GetDetailsForScreenshotUploads(...args: any[]);
		GetDownloadedWorkshopItems(...args: any[]);
		GetDurationControlInfo(...args: any[]);
		GetFriendAchievementsForApp(...args: any[]);
		GetFriendsWhoPlay(...args: any[]);
		GetGameActionDetails(...args: any[]);
		GetGameActionForApp(...args: any[]);
		GetLaunchOptionsForApp(...args: any[]);
		GetMyAchievementsForApp(...args: any[]);
		GetPlaytime(...args: any[]);
		GetPrePurchasedApps(...args: any[]);
		GetResolutionOverrideForApp(...args: any[]);
		GetScreenshotInfo(...args: any[]);
		GetScreenshotsInTimeRange(...args: any[]);
		GetShortcutDataForPath(...args: any[]);
		GetSoundtrackDetails(...args: any[]);
		GetSubscribedWorkshopItemDetails(...args: any[]);
		GetSubscribedWorkshopItems(...args: any[]);
		InstallFlatpakAppAndCreateShortcut(...args: any[]);
		JoinAppContentBeta(...args: any[]);
		JoinAppContentBetaByPassword(...args: any[]);
		ListFlatpakApps(...args: any[]);
		LoadEula(...args: any[]);
		MarkEulaAccepted(...args: any[]);
		MarkEulaRejected(...args: any[]);
		MoveWorkshopItemLoadOrder(...args: any[]);
		OpenAppSettingsDialog(...args: any[]);
		RaiseWindowForGame(...args: any[]);
		RegisterForAchievementChanges(...args: any[]);
		RegisterForAppBackupStatus(...args: any[]);
		RegisterForAppDetails(...args: any[]);
		RegisterForAppOverviewChanges(...args: any[]);
		RegisterForDRMFailureResponse(...args: any[]);
		RegisterForGameActionEnd(...args: any[]);
		RegisterForGameActionShowError(...args: any[]);
		RegisterForGameActionShowUI(...args: any[]);
		RegisterForGameActionStart(...args: any[]);
		RegisterForGameActionTaskChange(...args: any[]);
		RegisterForGameActionUserRequest(...args: any[]);
		RegisterForPrePurchasedAppChanges(...args: any[]);
		RegisterForShowMarketingMessageDialog(...args: any[]);
		RegisterForWorkshopChanges(...args: any[]);
		RegisterForWorkshopItemDownloads(...args: any[]);
		RegisterForWorkshopItemInstalled(...args: any[]);
		RemoveShortcut(...args: any[]);
		ReportLibraryAssetCacheMiss(...args: any[]);
		ReportMarketingMessageDialogShown(...args: any[]);
		RequestIconDataForApp(...args: any[]);
		RequestLegacyCDKeysForApp(...args: any[]);
		RunGame(...args: any[]);
		SaveAchievementProgressCache(...args: any[]);
		ScanForInstalledNonSteamApps(...args: any[]);
		SetAppAutoUpdateBehavior(...args: any[]);
		SetAppBackgroundDownloadsBehavior(...args: any[]);
		SetAppCurrentLanguage(...args: any[]);
		SetAppLaunchOptions(...args: any[]);
		SetAppResolutionOverride(...args: any[]);
		SetCachedAppDetails(...args: any[]);
		SetControllerRumblePreference(...args: any[]);
		SetCustomArtworkForApp(...args: any[]);
		SetCustomLogoPositionForApp(...args: any[]);
		SetDLCEnabled(...args: any[]);
		SetLocalScreenshotCaption(...args: any[]);
		SetLocalScreenshotPrivacy(...args: any[]);
		SetLocalScreenshotSpoiler(...args: any[]);
		SetShortcutExe(...args: any[]);
		SetShortcutIcon(...args: any[]);
		SetShortcutIsVR(...args: any[]);
		SetShortcutLaunchOptions(...args: any[]);
		SetShortcutName(...args: any[]);
		SetShortcutSortAs(...args: any[]);
		SetShortcutStartDir(...args: any[]);
		SetStreamingClientForApp(...args: any[]);
		SetThirdPartyControllerConfiguration(...args: any[]);
		SetWorkshopItemsDisabledLocally(...args: any[]);
		SetWorkshopItemsLoadOrder(...args: any[]);
		ShowControllerConfigurator(...args: any[]);
		ShowStore(...args: any[]);
		SpecifyCompatExperiment(...args: any[]);
		SpecifyCompatTool(...args: any[]);
		StreamGame(...args: any[]);
		SubscribeWorkshopItem(...args: any[]);
		TerminateApp(...args: any[]);
		ToggleAllowDesktopConfiguration(...args: any[]);
		ToggleAppSteamCloudEnabled(...args: any[]);
		ToggleAppSteamCloudSyncOnSuspendEnabled(...args: any[]);
		ToggleEnableSteamOverlayForApp(...args: any[]);
		ToggleOverrideResolutionForInternalDisplay(...args: any[]);
		UninstallFlatpakApp(...args: any[]);
		VerifyApp(...args: any[]);
	};
	Auth: {
		ClearCachedSignInPin(...args: any[]);
		CurrentUserHasCachedSignInPin(...args: any[]);
		GetLocalHostname(...args: any[]);
		GetMachineID(...args: any[]);
		GetRefreshInfo(...args: any[]);
		GetSteamGuardData(...args: any[]);
		IsSecureComputer(...args: any[]);
		SetCachedSignInPin(...args: any[]);
		SetLoginToken(...args: any[]);
		SetSteamGuardData(...args: any[]);
		StartSignInFromCache(...args: any[]);
		UserHasCachedSignInPin(...args: any[]);
		ValidateCachedSignInPin(...args: any[]);
	};
	Broadcast: {
		ApproveViewerRequest(...args: any[]);
		InviteToWatch(...args: any[]);
		RegisterForBroadcastStatus(...args: any[]);
		RegisterForViewerRequests(...args: any[]);
		RejectViewerRequest(...args: any[]);
		StopBroadcasting(...args: any[]);
	};
	Browser: {
		AddWordToDictionary(...args: any[]);
		ClearAllBrowsingData(...args: any[]);
		ClearHistory(...args: any[]);
		CloseDevTools(...args: any[]);
		GetBrowserID(...args: any[]);
		GetSpellingSuggestions(...args: any[]);
		GetSteamBrowserID(...args: any[]);
		HideCursorUntilMouseEvent(...args: any[]);
		InspectElement(...args: any[]);
		NotifyUserActivation(...args: any[]);
		OpenDevTools(...args: any[]);
		Paste(...args: any[]);
		RegisterForGestureEvents(...args: any[]);
		RegisterForOpenNewTab(...args: any[]);
		ReplaceMisspelling(...args: any[]);
		RestartJSContext(...args: any[]);
		SetBackgroundThrottlingDisabled(...args: any[]);
		SetPendingFilePath(...args: any[]);
		SetShouldExitSteamOnBrowserClosed(...args: any[]);
		SetTouchGesturesToCancel(...args: any[]);
		StartDownload(...args: any[]);
	};
	BrowserView: {
		Create(...args: any[]);
		CreatePopup(...args: any[]);
		Destroy(...args: any[]);
		PostMessageToParent(...args: any[]);
	};
	ClientNotifications: {
		DisplayClientNotification(...args: any[]);
		OnRespondToClientNotification(...args: any[]);
	};
	Cloud: {
		ResolveAppSyncConflict(...args: any[]);
		RetryAppSync(...args: any[]);
	};
	CloudStorage: { WriteKey(...args: any[]) };
	CommunityItems: {
		DownloadItemAsset(...args: any[]);
		GetItemAssetPath(...args: any[]);
		RemoveDownloadedItemAsset(...args: any[]);
	};
	Console: {
		ExecCommand(...args: any[]);
		GetAutocompleteSuggestions(...args: any[]);
		RegisterForSpewOutput(...args: any[]);
	};
	Customization: {
		GenerateLocalStartupMoviesThumbnails(...args: any[]);
		GetDownloadedStartupMovies(...args: any[]);
		GetLocalStartupMovies(...args: any[]);
	};
	Downloads: {
		EnableAllDownloads(...args: any[]);
		MoveAppUpdateDown(...args: any[]);
		MoveAppUpdateUp(...args: any[]);
		PauseAppUpdate(...args: any[]);
		QueueAppUpdate(...args: any[]);
		RegisterForDownloadItems(...args: any[]);
		RegisterForDownloadOverview(...args: any[]);
		RemoveFromDownloadList(...args: any[]);
		ResumeAppUpdate(...args: any[]);
		SetLaunchOnUpdateComplete(...args: any[]);
		SetQueueIndex(...args: any[]);
		SuspendDownloadThrottling(...args: any[]);
		SuspendLanPeerContent(...args: any[]);
	};
	FamilySharing: {
		GetAvailableLenders(...args: any[]);
		RegisterForKickedBorrower(...args: any[]);
		SetPreferredLender(...args: any[]);
	};
	FriendSettings: {
		GetEnabledFeatures(...args: any[]);
		RegisterForSettingsChanges(...args: any[]);
		SetFriendSettings(...args: any[]);
	};
	Friends: {
		GetCoplayData(...args: any[]);
		InviteUserToCurrentGame(...args: any[]);
		InviteUserToGame(...args: any[]);
		InviteUserToLobby(...args: any[]);
		InviteUserToRemotePlayTogetherCurrentGame(...args: any[]);
		RegisterForMultiplayerSessionShareURLChanged(...args: any[]);
		RegisterForVoiceChatStatus(...args: any[]);
		ShowRemotePlayTogetherUI(...args: any[]);
	};
	GameNotes: {
		DeleteImage(...args: any[]);
		DeleteNotes(...args: any[]);
		GetNotes(...args: any[]);
		GetNotesMetadata(...args: any[]);
		GetNumNotes(...args: any[]);
		GetQuota(...args: any[]);
		IterateNotes(...args: any[]);
		ResolveSyncConflicts(...args: any[]);
		SaveNotes(...args: any[]);
		SyncToClient(...args: any[]);
		SyncToServer(...args: any[]);
		UploadImage(...args: any[]);
	};
	GameRecording: {
		RegisterForAudioSessionsChanged(...args: any[]);
		SetAudioSessionCaptureState(...args: any[]);
	};
	GameSessions: {
		RegisterForAchievementNotification(...args: any[]);
		RegisterForAppLifetimeNotifications(...args: any[]);
		RegisterForScreenshotNotification(...args: any[]);
	};
	Input: {
		CalibrateControllerIMU(...args: any[]);
		CalibrateControllerJoystick(...args: any[]);
		CalibrateControllerTrackpads(...args: any[]);
		CancelGyroSWCalibration(...args: any[]);
		ClearSelectedConfigForApp(...args: any[]);
		CloseDesktopConfigurator(...args: any[]);
		ControllerKeyboardSendText(...args: any[]);
		ControllerKeyboardSetKeyState(...args: any[]);
		DecrementCloudedControllerConfigsCounter(...args: any[]);
		DeletePersonalControllerConfiguration(...args: any[]);
		DuplicateControllerConfigurationSourceMode(...args: any[]);
		EnableControllerAnalogInputMessages(...args: any[]);
		EndControllerDeviceSupportFlow(...args: any[]);
		ExportCurrentControllerConfiguration(...args: any[]);
		ForceConfiguratorFocus(...args: any[]);
		ForceSimpleHapticEvent(...args: any[]);
		FreeControllerConfig(...args: any[]);
		GetConfigForAppAndController(...args: any[]);
		GetControllerMappingString(...args: any[]);
		GetControllerPreviouslySeen(...args: any[]);
		GetSteamControllerDongleState(...args: any[]);
		GetTouchMenuIconsForApp(...args: any[]);
		GetXboxDriverInstallState(...args: any[]);
		IdentifyController(...args: any[]);
		InitControllerSounds(...args: any[]);
		InitializeControllerPersonalizationSettings(...args: any[]);
		ModalKeyboardDismissed(...args: any[]);
		OpenDesktopConfigurator(...args: any[]);
		PreviewConfigForAppAndController(...args: any[]);
		PreviewControllerLEDColor(...args: any[]);
		QueryControllerConfigsForApp(...args: any[]);
		RegisterForActiveConfigLoadedMessages(...args: any[]);
		RegisterForActiveControllerChanges(...args: any[]);
		RegisterForConfigSelectionChanges(...args: any[]);
		RegisterForControllerAccountChanges(...args: any[]);
		RegisterForControllerAnalogInputMessages(...args: any[]);
		RegisterForControllerBatteryChanges(...args: any[]);
		RegisterForControllerCommandMessages(...args: any[]);
		RegisterForControllerConfigCloudStateChanges(...args: any[]);
		RegisterForControllerConfigInfoMessages(...args: any[]);
		RegisterForControllerInputMessages(...args: any[]);
		RegisterForControllerListChanges(...args: any[]);
		RegisterForControllerStateChanges(...args: any[]);
		RegisterForDualSenseUpdateNotification(...args: any[]);
		RegisterForGameKeyboardMessages(...args: any[]);
		RegisterForRemotePlayConfigChanges(...args: any[]);
		RegisterForShowControllerLayoutPreviewMessages(...args: any[]);
		RegisterForTouchMenuInputMessages(...args: any[]);
		RegisterForTouchMenuMessages(...args: any[]);
		RegisterForUIVisualization(...args: any[]);
		RegisterForUnboundControllerListChanges(...args: any[]);
		RegisterForUserDismissKeyboardMessages(...args: any[]);
		RegisterForUserKeyboardMessages(...args: any[]);
		RequestGyroActive(...args: any[]);
		RequestRemotePlayControllerConfigs(...args: any[]);
		ResetControllerBindings(...args: any[]);
		ResolveCloudedControllerConfigConflict(...args: any[]);
		RestoreControllerPersonalizationSettings(...args: any[]);
		SaveControllerCalibration(...args: any[]);
		SaveControllerPersonalizationSettings(...args: any[]);
		SaveControllerSounds(...args: any[]);
		SaveEditingControllerConfiguration(...args: any[]);
		SetControllerConfigurationModeShiftBinding(...args: any[]);
		SetControllerHapticSetting(...args: any[]);
		SetControllerMappingString(...args: any[]);
		SetControllerName(...args: any[]);
		SetControllerNintendoLayoutSetting(...args: any[]);
		SetControllerPersonalizationName(...args: any[]);
		SetControllerPersonalizationSetting(...args: any[]);
		SetControllerPersonalizationSettingFloat(...args: any[]);
		SetControllerRumbleSetting(...args: any[]);
		SetControllerUseUniversalFaceButtonGlyphs(...args: any[]);
		SetCursorActionset(...args: any[]);
		SetDualSenseUpdateNotification(...args: any[]);
		SetEditingControllerConfigurationActionSet(...args: any[]);
		SetEditingControllerConfigurationInputActivator(...args: any[]);
		SetEditingControllerConfigurationInputActivatorEnabled(...args: any[]);
		SetEditingControllerConfigurationInputBinding(...args: any[]);
		SetEditingControllerConfigurationMiscSetting(...args: any[]);
		SetEditingControllerConfigurationSourceMode(...args: any[]);
		SetGamepadKeyboardText(...args: any[]);
		SetKeyboardActionset(...args: any[]);
		SetMousePosition(...args: any[]);
		SetSelectedConfigForApp(...args: any[]);
		SetSteamControllerDonglePairingMode(...args: any[]);
		SetVirtualMenuKeySelected(...args: any[]);
		SetWebBrowserActionset(...args: any[]);
		SetXboxDriverInstallState(...args: any[]);
		ShowControllerSettings(...args: any[]);
		StandaloneKeyboardDismissed(...args: any[]);
		StartControllerDeviceSupportFlow(...args: any[]);
		StartEditingControllerConfigurationForAppIDAndControllerIndex(
			...args: any[]
		);
		StartGyroSWCalibration(...args: any[]);
		StartUIVisualization(...args: any[]);
		StopEditingControllerConfiguration(...args: any[]);
		StopUIVisualization(...args: any[]);
		SwapControllerConfigurationSourceModes(...args: any[]);
		SwapControllerModeInputBindings(...args: any[]);
		SwapControllerOrder(...args: any[]);
		SyncCloudedControllerConfigs(...args: any[]);
		TriggerHapticPulse(...args: any[]);
		TriggerSimpleHapticEvent(...args: any[]);
		UnregisterForControllerStateChanges(...args: any[]);
		UploadChangesForCloudedControllerConfigs(...args: any[]);
	};
	InstallFolder: {
		AddInstallFolder(...args: any[]);
		BrowseFilesInFolder(...args: any[]);
		CancelMove(...args: any[]);
		GetInstallFolders(...args: any[]);
		GetPotentialFolders(...args: any[]);
		MoveInstallFolderForApp(...args: any[]);
		RefreshFolders(...args: any[]);
		RegisterForInstallFolderChanges(...args: any[]);
		RegisterForMoveContentProgress(...args: any[]);
		RegisterForRepairFolderFinished(...args: any[]);
		RemoveInstallFolder(...args: any[]);
		RepairInstallFolder(...args: any[]);
		SetDefaultInstallFolder(...args: any[]);
		SetFolderLabel(...args: any[]);
	};
	Installs: {
		CancelInstall(...args: any[]);
		ContinueInstall(...args: any[]);
		GetInstallManagerInfo(...args: any[]);
		OpenInstallBackup(...args: any[]);
		OpenInstallWizard(...args: any[]);
		OpenUninstallWizard(...args: any[]);
		RegisterForShowConfirmUninstall(...args: any[]);
		RegisterForShowFailedUninstall(...args: any[]);
		RegisterForShowInstallWizard(...args: any[]);
		RegisterForShowRegisterCDKey(...args: any[]);
		SetAppList(...args: any[]);
		SetCreateShortcuts(...args: any[]);
		SetInstallFolder(...args: any[]);
	};
	MachineStorage: {
		DeleteKey(...args: any[]);
		GetJSON(...args: any[]);
		GetString(...args: any[]);
		SetObject(...args: any[]);
		SetString(...args: any[]);
	};
	Messaging: {
		PostMessage(...args: any[]);
		RegisterForMessages(...args: any[]);
	};
	Music: {
		DecreaseVolume(...args: any[]);
		IncreaseVolume(...args: any[]);
		PlayNext(...args: any[]);
		PlayPrevious(...args: any[]);
		RegisterForMusicPlaybackChanges(...args: any[]);
		RegisterForMusicPlaybackPosition(...args: any[]);
		SetPlaybackPosition(...args: any[]);
		SetPlayingRepeatStatus(...args: any[]);
		SetPlayingShuffled(...args: any[]);
		SetVolume(...args: any[]);
		ToggleMuteVolume(...args: any[]);
		TogglePlayPause(...args: any[]);
	};
	Notifications: { RegisterForNotifications(...args: any[]) };
	OpenVR: {
		Device: {
			BIsConnected(...args: any[]);
			RegisterForDeviceConnectivityChange(...args: any[]);
			RegisterForVRDeviceSeenRecently(...args: any[]);
		};
		DeviceProperties: {
			GetBoolDeviceProperty(...args: any[]);
			GetDoubleDeviceProperty(...args: any[]);
			GetFloatDeviceProperty(...args: any[]);
			GetInt32DeviceProperty(...args: any[]);
			GetStringDeviceProperty(...args: any[]);
			RegisterForDevicePropertyChange(...args: any[]);
		};
		ExtendActivityTimeout(...args: any[]);
		GetMutualCapabilities(...args: any[]);
		GetWebSecret(...args: any[]);
		InstallVR(...args: any[]);
		Keyboard: {
			Hide(...args: any[]);
			RegisterForStatus(...args: any[]);
			SendDone(...args: any[]);
			SendText(...args: any[]);
			Show(...args: any[]);
		};
		PathProperties: {
			GetBoolPathProperty(...args: any[]);
			GetDoublePathProperty(...args: any[]);
			GetFloatPathProperty(...args: any[]);
			GetInt32PathProperty(...args: any[]);
			GetStringPathProperty(...args: any[]);
			RegisterForPathPropertyChange(...args: any[]);
			SetBoolPathProperty(...args: any[]);
			SetDoublePathProperty(...args: any[]);
			SetFloatPathProperty(...args: any[]);
			SetInt32PathProperty(...args: any[]);
			SetStringPathProperty(...args: any[]);
		};
		QuitAllVR(...args: any[]);
		RegisterForButtonPress(...args: any[]);
		RegisterForHMDActivityLevelChanged(...args: any[]);
		RegisterForInstallDialog(...args: any[]);
		RegisterForStartupErrors(...args: any[]);
		RegisterForVRHardwareDetected(...args: any[]);
		RegisterForVRModeChange(...args: any[]);
		RegisterForVRSceneAppChange(...args: any[]);
		SetOverlayInteractionAffordance(...args: any[]);
		StartVR(...args: any[]);
		TriggerOverlayHapticEffect(...args: any[]);
		VRNotifications: {
			HideCustomNotification(...args: any[]);
			RegisterForNotificationEvent(...args: any[]);
			ShowCustomNotification(...args: any[]);
		};
		VROverlay: {
			HideDashboard(...args: any[]);
			IsDashboardVisible(...args: any[]);
			RegisterForButtonPress(...args: any[]);
			RegisterForCursorMovement(...args: any[]);
			RegisterForThumbnailChanged(...args: any[]);
			RegisterForVisibilityChanged(...args: any[]);
			ShowDashboard(...args: any[]);
			SwitchToDashboardOverlay(...args: any[]);
		};
	};
	Overlay: {
		DestroyGamePadUIDesktopConfiguratorWindow(...args: any[]);
		GetOverlayBrowserInfo(...args: any[]);
		HandleGameWebCallback(...args: any[]);
		HandleProtocolForOverlayBrowser(...args: any[]);
		RegisterForActivateOverlayRequests(...args: any[]);
		RegisterForMicroTxnAuth(...args: any[]);
		RegisterForMicroTxnAuthDismiss(...args: any[]);
		RegisterForNotificationPositionChanged(...args: any[]);
		RegisterForOverlayActivated(...args: any[]);
		RegisterForOverlayBrowserProtocols(...args: any[]);
		RegisterOverlayBrowserInfoChanged(...args: any[]);
		SetOverlayState(...args: any[]);
	};
	Parental: {
		LockParentalLock(...args: any[]);
		RegisterForParentalPlaytimeWarnings(...args: any[]);
		RegisterForParentalSettingsChanges(...args: any[]);
		UnlockParentalLock(...args: any[]);
	};
	RemotePlay: {
		BCanAcceptInviteForGame(...args: any[]);
		BCanCreateInviteForGame(...args: any[]);
		BRemotePlayTogetherGuestOnPhoneOrTablet(...args: any[]);
		BRemotePlayTogetherGuestSupported(...args: any[]);
		CancelInviteAndSession(...args: any[]);
		CancelInviteAndSessionWithGuestID(...args: any[]);
		CancelRemoteClientPairing(...args: any[]);
		CloseGroup(...args: any[]);
		CreateGroup(...args: any[]);
		CreateInviteAndSession(...args: any[]);
		CreateInviteAndSessionWithGuestID(...args: any[]);
		GetClientID(...args: any[]);
		GetClientStreamingBitrate(...args: any[]);
		GetClientStreamingQuality(...args: any[]);
		GetControllerType(...args: any[]);
		GetGameSystemVolume(...args: any[]);
		GetPerUserInputSettings(...args: any[]);
		GetPerUserInputSettingsWithGuestID(...args: any[]);
		IdentifyController(...args: any[]);
		InstallAudioDriver(...args: any[]);
		InstallInputDriver(...args: any[]);
		MoveControllerToSlot(...args: any[]);
		RegisterForAdditionalParentalBlocks(...args: any[]);
		RegisterForAudioDriverPrompt(...args: any[]);
		RegisterForBitrateOverride(...args: any[]);
		RegisterForClearControllers(...args: any[]);
		RegisterForControllerIndexSet(...args: any[]);
		RegisterForDevicesChanges(...args: any[]);
		RegisterForGroupCreated(...args: any[]);
		RegisterForGroupDisbanded(...args: any[]);
		RegisterForInputDriverPrompt(...args: any[]);
		RegisterForInputDriverRestartNotice(...args: any[]);
		RegisterForInputUsed(...args: any[]);
		RegisterForInviteResult(...args: any[]);
		RegisterForNetworkUtilizationUpdate(...args: any[]);
		RegisterForPlaceholderStateChanged(...args: any[]);
		RegisterForPlayerInputSettingsChanged(...args: any[]);
		RegisterForQualityOverride(...args: any[]);
		RegisterForRemoteClientLaunchFailed(...args: any[]);
		RegisterForRemoteClientStarted(...args: any[]);
		RegisterForRemoteClientStopped(...args: any[]);
		RegisterForRemoteDeviceAuthorizationCancelled(...args: any[]);
		RegisterForRemoteDeviceAuthorizationRequested(...args: any[]);
		RegisterForRemoteDevicePairingPINChanged(...args: any[]);
		RegisterForRestrictedSessionChanges(...args: any[]);
		RegisterForSessionJoined(...args: any[]);
		RegisterForSessionStarted(...args: any[]);
		RegisterForSessionStopped(...args: any[]);
		RegisterForSettingsChanges(...args: any[]);
		RegisterForVRStreamingInvitation(...args: any[]);
		SetClientStreamingBitrate(...args: any[]);
		SetClientStreamingQuality(...args: any[]);
		SetGameSystemVolume(...args: any[]);
		SetPerUserControllerInputEnabled(...args: any[]);
		SetPerUserControllerInputEnabledWithGuestID(...args: any[]);
		SetPerUserKeyboardInputEnabled(...args: any[]);
		SetPerUserKeyboardInputEnabledWithGuestID(...args: any[]);
		SetPerUserMouseInputEnabled(...args: any[]);
		SetPerUserMouseInputEnabledWithGuestID(...args: any[]);
		SetRemoteDeviceAuthorized(...args: any[]);
		SetRemoteDevicePIN(...args: any[]);
		SetRemotePlayEnabled(...args: any[]);
		SetStreamingClientConfig(...args: any[]);
		SetStreamingClientConfigEnabled(...args: any[]);
		SetStreamingDesktopToRemotePlayTogetherEnabled(...args: any[]);
		SetStreamingP2PScope(...args: any[]);
		SetStreamingServerConfig(...args: any[]);
		SetStreamingServerConfigEnabled(...args: any[]);
		StopStreamingClient(...args: any[]);
		StopStreamingSession(...args: any[]);
		StopStreamingSessionAndSuspendDevice(...args: any[]);
		UnlockH264(...args: any[]);
		UnpairRemoteDevices(...args: any[]);
	};
	RoamingStorage: {
		DeleteKey(...args: any[]);
		GetJSON(...args: any[]);
		GetString(...args: any[]);
		SetObject(...args: any[]);
		SetString(...args: any[]);
	};
	Screenshots: {
		DeleteLocalScreenshot(...args: any[]);
		DeleteLocalScreenshots(...args: any[]);
		GetAllAppsLocalScreenshots(...args: any[]);
		GetAllAppsLocalScreenshotsCount(...args: any[]);
		GetAllAppsLocalScreenshotsRange(...args: any[]);
		GetAllLocalScreenshots(...args: any[]);
		GetGameWithLocalScreenshots(...args: any[]);
		GetLastScreenshotTaken(...args: any[]);
		GetLocalScreenshotByHandle(...args: any[]);
		GetLocalScreenshotCount(...args: any[]);
		GetLocalScreenshotPath(...args: any[]);
		GetNumGamesWithLocalScreenshots(...args: any[]);
		GetTotalDiskSpaceUsage(...args: any[]);
		ShowScreenshotInSystemViewer(...args: any[]);
		ShowScreenshotsOnDisk(...args: any[]);
		UploadLocalScreenshot(...args: any[]);
	};
	ServerBrowser: {
		AddFavoriteServer(...args: any[]);
		AddFavoriteServersByIP(...args: any[]);
		CancelServerQuery(...args: any[]);
		ConnectToServer(...args: any[]);
		CreateFriendGameInfoDialog(...args: any[]);
		CreateServerGameInfoDialog(...args: any[]);
		CreateServerListRequest(...args: any[]);
		DestroyGameInfoDialog(...args: any[]);
		DestroyServerListRequest(...args: any[]);
		GetMultiplayerGames(...args: any[]);
		GetServerListPreferences(...args: any[]);
		PingServer(...args: any[]);
		RegisterForFavorites(...args: any[]);
		RegisterForFriendGamePlayed(...args: any[]);
		RegisterForGameInfoDialogs(...args: any[]);
		RegisterForPlayerDetails(...args: any[]);
		RegisterForServerInfo(...args: any[]);
		RemoveFavoriteServer(...args: any[]);
		RemoveHistoryServer(...args: any[]);
		RequestPlayerDetails(...args: any[]);
		SetServerListPreferences(...args: any[]);
	};
	Settings: {
		AddClientBeta(...args: any[]);
		ClearAllHTTPCaches(...args: any[]);
		ClearDownloadCache(...args: any[]);
		GetAccountSettings(...args: any[]);
		GetAppUsesP2PVoice(...args: any[]);
		GetAvailableLanguages(...args: any[]);
		GetAvailableTimeZones(...args: any[]);
		GetCurrentLanguage(...args: any[]);
		GetGlobalCompatTools(...args: any[]);
		GetMonitorInfo(...args: any[]);
		GetOOBETestMode(...args: any[]);
		GetRegisteredSteamDeck(...args: any[]);
		GetTimeZone(...args: any[]);
		GetWindowed(...args: any[]);
		IgnoreSteamDeckRewards(...args: any[]);
		OpenWindowsMicSettings(...args: any[]);
		RegisterForAppsWithAutoUpdateOverrides(...args: any[]);
		RegisterForMicVolumeUpdates(...args: any[]);
		RegisterForSettingsArrayChanges(...args: any[]);
		RegisterForSettingsChanges(...args: any[]);
		RegisterForTimeZoneChange(...args: any[]);
		ReinitMicSettings(...args: any[]);
		RenderHotkey(...args: any[]);
		SelectClientBeta(...args: any[]);
		SetCurrentLanguage(...args: any[]);
		SetEnableSoftProcessKill(...args: any[]);
		SetHostname(...args: any[]);
		SetMicTestMode(...args: any[]);
		SetOOBETestMode(...args: any[]);
		SetPreferredMonitor(...args: any[]);
		SetRegisteredSteamDeck(...args: any[]);
		SetSaveAccountCredentials(...args: any[]);
		SetSetting(...args: any[]);
		SetTimeZone(...args: any[]);
		SetUseNintendoButtonLayout(...args: any[]);
		SetUseUniversalFaceButtonGlyphs(...args: any[]);
		SetWindowed(...args: any[]);
		SpecifyGlobalCompatTool(...args: any[]);
		ToggleSteamInstall(...args: any[]);
	};
	SharedConnection: {
		AllocateSharedConnection(...args: any[]);
		Close(...args: any[]);
		RegisterOnBinaryMessageReceived(...args: any[]);
		RegisterOnLogonInfoChanged(...args: any[]);
		RegisterOnMessageReceived(...args: any[]);
		SendMsg(...args: any[]);
		SendMsgAndAwaitBinaryResponse(...args: any[]);
		SendMsgAndAwaitResponse(...args: any[]);
		SubscribeToClientServiceMethod(...args: any[]);
		SubscribeToEMsg(...args: any[]);
	};
	Stats: {
		RecordActivationEvent(...args: any[]);
		RecordDisplayEvent(...args: any[]);
	};
	SteamChina: { GetCustomLauncherAppID(...args: any[]) };
	Storage: {
		DeleteKey(...args: any[]);
		GetJSON(...args: any[]);
		GetString(...args: any[]);
		SetObject(...args: any[]);
		SetString(...args: any[]);
	};
	Streaming: {
		AcceptStreamingEULA(...args: any[]);
		CancelStreamGame(...args: any[]);
		RegisterForStreamingClientFinished(...args: any[]);
		RegisterForStreamingClientLaunchProgress(...args: any[]);
		RegisterForStreamingClientStarted(...args: any[]);
		RegisterForStreamingLaunchComplete(...args: any[]);
		RegisterForStreamingShowEula(...args: any[]);
		RegisterForStreamingShowIntro(...args: any[]);
		RegisterForStreamingShowLaunchOptions(...args: any[]);
		StreamingContinueStreamGame(...args: any[]);
		StreamingSetLaunchOption(...args: any[]);
	};
	System: {
		Audio: {
			ClearDefaultDeviceOverride(...args: any[]);
			GetApps(...args: any[]);
			GetDevices(...args: any[]);
			RegisterForAppAdded(...args: any[]);
			RegisterForAppRemoved(...args: any[]);
			RegisterForAppVolumeChanged(...args: any[]);
			RegisterForDeviceAdded(...args: any[]);
			RegisterForDeviceRemoved(...args: any[]);
			RegisterForDeviceVolumeChanged(...args: any[]);
			RegisterForServiceConnectionStateChanges(...args: any[]);
			RegisterForVolumeButtonPressed(...args: any[]);
			SetAppVolume(...args: any[]);
			SetDefaultDeviceOverride(...args: any[]);
			SetDeviceVolume(...args: any[]);
		};
		CopyFile(...args: any[]);
		CopyFilesToClipboard(...args: any[]);
		CreateTempPath(...args: any[]);
		Devkit: {
			RegisterForPairingPrompt(...args: any[]);
			RespondToPairingPrompt(...args: any[]);
			SetPairing(...args: any[]);
		};
		Display: {
			EnableUnderscan(...args: any[]);
			RegisterForBrightnessChanges(...args: any[]);
			SetBrightness(...args: any[]);
			SetUnderscanLevel(...args: any[]);
		};
		ExitFakeCaptivePortal(...args: any[]);
		FactoryReset(...args: any[]);
		FormatStorage(...args: any[]);
		GetOSType(...args: any[]);
		GetSystemInfo(...args: any[]);
		IsDeckFactoryImage(...args: any[]);
		IsSteamInTournamentMode(...args: any[]);
		MoveFile(...args: any[]);
		Network: {
			Device: {
				Connect(...args: any[]);
				Disconnect(...args: any[]);
				WirelessNetwork: {
					Forget(...args: any[]);
					SetAutoconnect(...args: any[]);
				};
			};
			ForceRefresh(...args: any[]);
			ForceTestConnectivity(...args: any[]);
			GetProxyInfo(...args: any[]);
			RegisterForAppSummaryUpdate(...args: any[]);
			RegisterForConnectionStateUpdate(...args: any[]);
			RegisterForConnectivityTestChanges(...args: any[]);
			RegisterForDeviceChanges(...args: any[]);
			SetFakeLocalSystemState(...args: any[]);
			SetProxyInfo(...args: any[]);
			SetWifiEnabled(...args: any[]);
			StartScanningForNetworks(...args: any[]);
			StopScanningForNetworks(...args: any[]);
		};
		NotifyGameOverlayStateChanged(...args: any[]);
		OpenFileDialog(...args: any[]);
		OpenInSystemBrowser(...args: any[]);
		OpenLocalDirectoryInSystemExplorer(...args: any[]);
		RebootToAlternateSystemPartition(...args: any[]);
		RebootToFactoryTestImage(...args: any[]);
		RegisterForAirplaneModeChanges(...args: any[]);
		RegisterForBatteryStateChanges(...args: any[]);
		RegisterForFormatStorageProgress(...args: any[]);
		RegisterForOnResumeFromSuspend(...args: any[]);
		RegisterForOnSuspendRequest(...args: any[]);
		RegisterForSettingsChanges(...args: any[]);
		Report: {
			GenerateSystemReport(...args: any[]);
			SaveToDesktop(...args: any[]);
			Submit(...args: any[]);
		};
		RestartPC(...args: any[]);
		SetAirplaneMode(...args: any[]);
		ShutdownPC(...args: any[]);
		SteamRuntimeSystemInfo(...args: any[]);
		SuspendPC(...args: any[]);
		SwitchToDesktop(...args: any[]);
		UI: {
			CloseGameWindow(...args: any[]);
			GetGameWindowsInfo(...args: any[]);
			RegisterForFocusChangeEvents(...args: any[]);
			RegisterForOverlayGameWindowFocusChanged(...args: any[]);
			RegisterForSystemKeyEvents(...args: any[]);
		};
		UpdateSettings(...args: any[]);
		VideoRecordingDriverCheck(...args: any[]);
	};
	UI: {
		EnsureMainWindowCreated(...args: any[]);
		ExitBigPictureMode(...args: any[]);
		GetDesiredSteamUIWindows(...args: any[]);
		GetOSEndOfLifeInfo(...args: any[]);
		GetUIMode(...args: any[]);
		NotifyAppInitialized(...args: any[]);
		RegisterDesiredSteamUIWindowsChanged(...args: any[]);
		RegisterForClientConVar(...args: any[]);
		RegisterForErrorCondition(...args: any[]);
		RegisterForKioskModeResetSignal(...args: any[]);
		RegisterForStartupFinished(...args: any[]);
		RegisterForUIModeChanged(...args: any[]);
		ResetErrorCondition(...args: any[]);
		SetUIMode(...args: any[]);
	};
	URL: {
		ExecuteSteamURL(...args: any[]);
		GetSteamURLList(...args: any[]);
		GetWebSessionID(...args: any[]);
		RegisterForRunSteamURL(...args: any[]);
		RegisterForSteamURLChanges(...args: any[]);
	};
	Updates: {
		ApplyUpdates(...args: any[]);
		CheckForUpdates(...args: any[]);
		GetCurrentOSBranch(...args: any[]);
		GetOSBranchList(...args: any[]);
		RegisterForUpdateStateChanges(...args: any[]);
		SelectOSBranch(...args: any[]);
	};
	User: {
		AuthorizeMicrotxn(...args: any[]);
		CancelLogin(...args: any[]);
		CancelMicrotxn(...args: any[]);
		CancelRefreshLogin(...args: any[]);
		CancelShutdown(...args: any[]);
		ChangeUser(...args: any[]);
		Connect(...args: any[]);
		FlipToLogin(...args: any[]);
		ForceShutdown(...args: any[]);
		ForgetPassword(...args: any[]);
		GetIPCountry(...args: any[]);
		GetLoginProgress(...args: any[]);
		GetLoginUsers(...args: any[]);
		GoOffline(...args: any[]);
		GoOnline(...args: any[]);
		OptOutOfSurvey(...args: any[]);
		PrepareForSystemSuspend(...args: any[]);
		Reconnect(...args: any[]);
		RegisterForConnectionAttemptsThrottled(...args: any[]);
		RegisterForCurrentUserChanges(...args: any[]);
		RegisterForLoginStateChange(...args: any[]);
		RegisterForPrepareForSystemSuspendProgress(...args: any[]);
		RegisterForResumeSuspendedGamesProgress(...args: any[]);
		RegisterForShowHardwareSurvey(...args: any[]);
		RegisterForShutdownDone(...args: any[]);
		RegisterForShutdownFailed(...args: any[]);
		RegisterForShutdownStart(...args: any[]);
		RegisterForShutdownState(...args: any[]);
		RemoveUser(...args: any[]);
		RequestSupportSystemReport(...args: any[]);
		ResumeSuspendedGames(...args: any[]);
		RunSurvey(...args: any[]);
		SendSurvey(...args: any[]);
		SetAsyncNotificationEnabled(...args: any[]);
		SetLoginCredentials(...args: any[]);
		SetOOBEComplete(...args: any[]);
		ShouldShowUserChooser(...args: any[]);
		SignOutAndRestart(...args: any[]);
		StartLogin(...args: any[]);
		StartOffline(...args: any[]);
		StartRefreshLogin(...args: any[]);
		StartRestart(...args: any[]);
		StartShutdown(...args: any[]);
	};
	WebChat: {
		BSuppressPopupsInRestore(...args: any[]);
		GetCurrentUserAccountID(...args: any[]);
		GetLocalAvatarBase64(...args: any[]);
		GetLocalPersonaName(...args: any[]);
		GetOverlayChatBrowserInfo(...args: any[]);
		GetPrivateConnectString(...args: any[]);
		GetPushToTalkEnabled(...args: any[]);
		GetSignIntoFriendsOnStart(...args: any[]);
		GetUIMode(...args: any[]);
		OnGroupChatUserStateChange(...args: any[]);
		OnNewGroupChatMsgAdded(...args: any[]);
		OpenURLInClient(...args: any[]);
		RegisterForComputerActiveStateChange(...args: any[]);
		RegisterForFriendPostMessage(...args: any[]);
		RegisterForMouseXButtonDown(...args: any[]);
		RegisterForPushToTalkStateChange(...args: any[]);
		RegisterForUIModeChange(...args: any[]);
		RegisterOverlayChatBrowserInfoChanged(...args: any[]);
		SetActiveClanChatIDs(...args: any[]);
		SetNumChatsWithUnreadPriorityMessages(...args: any[]);
		SetPersonaName(...args: any[]);
		SetPushToMuteEnabled(...args: any[]);
		SetPushToTalkEnabled(...args: any[]);
		SetPushToTalkHotKey(...args: any[]);
		SetPushToTalkMouseButton(...args: any[]);
		SetVoiceChatActive(...args: any[]);
		SetVoiceChatStatus(...args: any[]);
		ShowChatRoomGroupDialog(...args: any[]);
		ShowFriendChatDialog(...args: any[]);
		UnregisterForMouseXButtonDown(...args: any[]);
	};
	WebUITransport: {
		GetTransportInfo(...args: any[]);
		NotifyTransportFailure(...args: any[]);
	};
	Window: {
		BringToFront(...args: any[]);
		Close(...args: any[]);
		DefaultMonitorHasFullscreenWindow(...args: any[]);
		FlashWindow(...args: any[]);
		GetDefaultMonitorDimensions(...args: any[]);
		GetMousePositionDetails(...args: any[]);
		GetWindowDetails(...args: any[]);
		GetWindowDimensions(...args: any[]);
		GetWindowRestoreDetails(...args: any[]);
		HideWindow(...args: any[]);
		IsWindowMaximized(...args: any[]);
		IsWindowMinimized(...args: any[]);
		MarkLastFocused(...args: any[]);
		Minimize(...args: any[]);
		MoveTo(...args: any[]);
		MoveToLocation(...args: any[]);
		PositionWindowRelative(...args: any[]);
		ProcessShuttingDown(...args: any[]);
		ResizeTo(...args: any[]);
		RestoreWindowSizeAndPosition(...args: any[]);
		SetComposition(...args: any[]);
		SetGamepadUIAutoDisplayScale(...args: any[]);
		SetGamepadUIManualDisplayScaleFactor(...args: any[]);
		SetHideOnClose(...args: any[]);
		SetKeyFocus(...args: any[]);
		SetMaxSize(...args: any[]);
		SetMinSize(...args: any[]);
		SetModal(...args: any[]);
		SetResizeGrip(...args: any[]);
		SetWindowIcon(...args: any[]);
		ShowWindow(...args: any[]);
		StopFlashWindow(...args: any[]);
		ToggleFullScreen(...args: any[]);
		ToggleMaximize(...args: any[]);
	};
	_internal: {
		BInGpuFallbackMode(...args: any[]);
		ExecutePromise(...args: any[]);
		GetDisplayScaleFactors(...args: any[]);
		RegisterForStyleChanges(...args: any[]);
		RequestDisableGpu(...args: any[]);
		SetDevMode(...args: any[]);
		SetForceDeviceScaleFactor(...args: any[]);
	};
}
