export interface g_ClanStore {
	m_bLoadedFromConfig: boolean;
	m_mapAppIDToClanInfo: Map<
		number,
		{
			appid: number;
			avatar_full_url: string;
			avatar_medium_url: string;
			clanAccountID: number;
			clanSteamID: {
				m_ulSteamID: {
					high: number;
					low: number;
					unsigned: boolean;

					function(e);
					function(e);
					function();
					function(e);
					function(e);
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function(e);
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function();
					function(e);
				};

				BIsClanAccount();
				BIsIndividualAccount();
				BIsValid();
				ConvertTo64BitString();
				GetAccountID();
				GetAccountType();
				GetInstance();
				GetUniverse();
				Render();
				SetAccountID(e);
				SetAccountType(e);
				SetFromComponents(e, t, n, i);
				SetInstance(e);
				SetUniverse(e);
			};
			creator_page_bg_url: any;
			group_name: string;
			has_rss_feed: any;
			has_visible_store_page: boolean;
			is_creator_home: number;
			is_curator: boolean;
			is_ogg: boolean;
			member_count: number;
			partner_events_enabled: boolean;
			rss_language: number;
			vanity_url: string;
		}
	>;
	m_mapClanAccountIDToClanInfo: Map<
		number,
		{
			appid: number;
			avatar_full_url: string;
			avatar_medium_url: string;
			clanAccountID: number;
			clanSteamID: {
				m_ulSteamID: {
					high: number;
					low: number;
					unsigned: boolean;

					function(e);
					function(e);
					function();
					function(e);
					function(e);
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function(e);
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function();
					function(e);
				};

				BIsClanAccount();
				BIsIndividualAccount();
				BIsValid();
				ConvertTo64BitString();
				GetAccountID();
				GetAccountType();
				GetInstance();
				GetUniverse();
				Render();
				SetAccountID(e);
				SetAccountType(e);
				SetFromComponents(e, t, n, i);
				SetInstance(e);
				SetUniverse(e);
			};
			creator_page_bg_url: any;
			group_name: string;
			has_rss_feed: any;
			has_visible_store_page: boolean;
			is_creator_home: number;
			is_curator: boolean;
			is_ogg: boolean;
			member_count: number;
			partner_events_enabled: boolean;
			rss_language: number;
			vanity_url: string;
		}
	>;
	m_mapPromisesLoading: Map<string, {}>;
	m_mapVanityToClanInfo: Map<
		string,
		{
			appid: number;
			avatar_full_url: string;
			avatar_medium_url: string;
			clanAccountID: number;
			clanSteamID: {
				m_ulSteamID: {
					high: number;
					low: number;
					unsigned: boolean;

					function(e);
					function(e);
					function();
					function(e);
					function(e);
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function(e);
					function();
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function(e);
					function();
					function();
					function();
					function();
					function();
					function(e);
					function();
					function(e);
				};

				BIsClanAccount();
				BIsIndividualAccount();
				BIsValid();
				ConvertTo64BitString();
				GetAccountID();
				GetAccountType();
				GetInstance();
				GetUniverse();
				Render();
				SetAccountID(e);
				SetAccountType(e);
				SetFromComponents(e, t, n, i);
				SetInstance(e);
				SetUniverse(e);
			};
			creator_page_bg_url: any;
			group_name: string;
			has_rss_feed: any;
			has_visible_store_page: boolean;
			is_creator_home: number;
			is_curator: boolean;
			is_ogg: boolean;
			member_count: number;
			partner_events_enabled: boolean;
			rss_language: number;
			vanity_url: string;
		}
	>;
	m_rgQueuedEventsClanIDs: any[];

	AddGroupVanities(e);
	BHasClanInfoLoaded(e);
	BHasClanInfoLoadedByAccountID(e);
	GetClanInfoByClanAccountID(e);
	GetClanMemberCount(e);
	GetClanSteamIDForAppID(e);
	GetClanVanityForAppID(e);
	GetClanVanityForClanSteamID(e);
	GetCreatorStoreURL(e);
	GetOGGClanInfo(e);
	GetRequestParam();
	HasLoadedClanAccountID(e);
	Init();
	InternalLoadClanInfoForClanSteamID(e): Promise<any>;
	InternalLoadOGGClanInfoForAppID(e): Promise<any>;
	InternalLoadOGGClanInfoForGroupVanity(e): Promise<any>;
	InternalLoadOGGClanInfoForIdentifier(e): Promise<any>;
	InternalSetupValue(e);
	LazyInit();
	LoadClanInfoForClanAccountID(e): Promise<any>;
	LoadClanInfoForClanSteamID(e): Promise<any>;
	LoadOGGClanInfoForAppID(e): Promise<any>;
	LoadOGGClanInfoForGroupVanity(e): Promise<any>;
	LoadOGGClanInfoForIdentifier(e): Promise<any>;
	RegisterClanData(e);
	ValidateClanConfig(e);
}
