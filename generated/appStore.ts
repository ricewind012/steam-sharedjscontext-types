import type { CMInterface } from "../normal/shared/CMInterface";
import type {
	CCallbackList,
	SubscribableValue,
} from "../normal/shared/interfaces";
import type {
	SteamCloudStorage,
	SteamLocalStorage,
} from "../normal/shared/storage";

export interface appStore {
	m_bIsInitialized: boolean;
	m_cloudStorage: SteamCloudStorage;
	m_cm: CMInterface;
	m_collator: {};
	m_mapApps: Map<
		number,
		{
			LOG_CHANGE(...args: any[]);
			__cachedLastPlayedSection: any;
			__cachedLastPlayedTime: any;
			__cachedReleaseYearString: any;
			album_cover_hash: any;
			app_type: number;
			appid: number;
			canonicalAppType: number;
			custom_sort_as_display: any;
			display_name: string;
			display_name_elanguage: number;
			has_custom_sort_as: any;
			header_filename: any;
			icon_data: any;
			icon_data_format: any;
			icon_hash: string;
			library_capsule_filename: string;
			library_id: string;
			local_cache_version: number;
			m_gameid: any;
			m_setStoreCategories: Set<number>;
			m_setStoreTags: Set<number>;
			m_ulGameId: any;
			mastersub_appid: any;
			mastersub_includedwith_logo: any;
			metacritic_score: any;
			minutes_playtime_forever: number;
			minutes_playtime_last_two_weeks: number;
			most_available_clientid: string;
			mru_index: number;
			number_of_copies: number;
			optional_parent_app_id: any;
			original_sort_as: any;
			owner_account_id: any;
			per_client_data: {
				client_name: string;
				clientid: string;
				display_status: number;
				installed: boolean;
				is_available_on_current_platform: boolean;
				status_percentage: number;
			}[];
			review_percentage_with_bombs: number;
			review_percentage_without_bombs: number;
			review_score_with_bombs: number;
			review_score_without_bombs: number;
			rt_custom_image_mtime: any;
			rt_last_time_locally_played: number;
			rt_last_time_played: number;
			rt_last_time_played_or_installed: number;
			rt_original_release_date: number;
			rt_purchased_time: number;
			rt_recent_activity_time: number;
			rt_steam_release_date: number;
			rt_store_asset_mtime: number;
			selected_clientid: string;
			shortcut_override_appid: any;
			site_license_site_name: any;
			size_on_disk: string;
			sort_as: string;
			steam_hw_compat_category_packed: number;
			subscribed_to: boolean;
			third_party_mod: any;
			visible_in_game_list: boolean;
			vr_only: any;
			vr_supported: any;
			xbox_controller_support: any;

			BAreCategoriesEqual(e);
			BAreSetsEqual(e, t);
			BAreStoreTagsEqual(e);
			BHasCustomImages();
			BHasNonObservableChange(e);
			BHasObservableChange(e);
			BHasObservables();
			BHasStoreCategory(e);
			BIsAppBlocked();
			BIsAppInBlockList();
			BIsApplicationOrTool();
			BIsBorrowed();
			BIsDemo();
			BIsGameIDEqual(e);
			BIsHardware();
			BIsLastTimePlayedEqual(e);
			BIsModOrShortcut();
			BIsMusicAlbum();
			BIsNewToLibrary();
			BIsNonVRGame();
			BIsOwned();
			BIsOwnedByAnotherUser();
			BIsPerClientDataEqual(e);
			BIsPerClientDataLocal(e);
			BIsSelectedClientLocal();
			BIsShortcut();
			BIsSortAsEqual(e);
			BIsSteamDeckVerified();
			BIsSteamOSCompatible();
			BIsSteamVR();
			BIsUnreleased();
			BIsVisibleInMRUList();
			BSupportsVR();
			ComputeLastPlayedSectionName(e);
			GetCanonicalReleaseDate();
			GetCanonicalReleaseYear();
			GetGameID();
			GetLastPlayedSectionName();
			GetLastTimePlayed();
			GetPerClientData(e);
			GetPreservedState();
			GetPrimaryAppID();
			GetStoreTags();
			InitFromProto(e);
			RestorePreservedState(e);
			SetGameID(e);
			SetLastTimePlayed(e);
			SetPerClientData(e);
			SetSortAs(e);
			SetStoreCategories(e);
			SetStoreTags(e);
		}
	>;
	m_mapStoreTagLocalization: {
		10235: string;
		1023537: string;
		102530: string;
		1027: string;
		1036: string;
		1038: string;
		10383: string;
		10397: string;
		10437: string;
		10679: string;
		10695: string;
		10808: string;
		10816: string;
		1084988: string;
		1091588: string;
		1100686: string;
		1100687: string;
		1100688: string;
		1100689: string;
		11014: string;
		11095: string;
		11104: string;
		11123: string;
		113: string;
		11333: string;
		11634: string;
		117648: string;
		1199779: string;
		12057: string;
		12095: string;
		12190: string;
		122: string;
		1220528: string;
		12286: string;
		123332: string;
		12472: string;
		1254546: string;
		1254552: string;
		128: string;
		129761: string;
		13070: string;
		13190: string;
		13276: string;
		13382: string;
		13577: string;
		13782: string;
		13906: string;
		14139: string;
		14153: string;
		143739: string;
		1445: string;
		14720: string;
		14906: string;
		15045: string;
		150626: string;
		15172: string;
		15277: string;
		15339: string;
		15564: string;
		158638: string;
		15868: string;
		15954: string;
		16094: string;
		1616: string;
		1621: string;
		1625: string;
		16250: string;
		1628: string;
		1638: string;
		1643: string;
		1644: string;
		1645: string;
		1646: string;
		1647: string;
		1649: string;
		1651: string;
		1654: string;
		1659: string;
		16598: string;
		1662: string;
		1663: string;
		1664: string;
		1665: string;
		1666: string;
		1667: string;
		16689: string;
		1669: string;
		1670: string;
		1671: string;
		1673: string;
		1674: string;
		1676: string;
		1677: string;
		1678: string;
		1680: string;
		1681: string;
		1684: string;
		1685: string;
		1687: string;
		1688: string;
		1693: string;
		1695: string;
		1697: string;
		1698: string;
		17015: string;
		1702: string;
		1708: string;
		1710: string;
		1714: string;
		1716: string;
		1717: string;
		1718: string;
		1719: string;
		1720: string;
		1721: string;
		1723: string;
		1730: string;
		17305: string;
		1732: string;
		1733: string;
		17337: string;
		1734: string;
		1736: string;
		1738: string;
		17389: string;
		1741: string;
		1742: string;
		1743: string;
		1746: string;
		1751: string;
		1752: string;
		1753: string;
		1754: string;
		1755: string;
		1756: string;
		1759: string;
		176981: string;
		1770: string;
		1773: string;
		1774: string;
		1775: string;
		1777: string;
		17770: string;
		17894: string;
		17927: string;
		180368: string;
		18594: string;
		189941: string;
		19: string;
		19568: string;
		19780: string;
		198631: string;
		198913: string;
		19995: string;
		21: string;
		21006: string;
		21725: string;
		21978: string;
		220585: string;
		22602: string;
		22955: string;
		233824: string;
		24003: string;
		24904: string;
		25085: string;
		252854: string;
		255534: string;
		26921: string;
		27758: string;
		28444: string;
		29363: string;
		29482: string;
		29855: string;
		30358: string;
		30927: string;
		31275: string;
		31579: string;
		32322: string;
		323922: string;
		324176: string;
		33572: string;
		337964: string;
		348922: string;
		35079: string;
		353880: string;
		363767: string;
		37799: string;
		3796: string;
		3798: string;
		3799: string;
		379975: string;
		3810: string;
		3813: string;
		3814: string;
		3834: string;
		3835: string;
		3839: string;
		3841: string;
		3843: string;
		3854: string;
		3859: string;
		3871: string;
		3877: string;
		3878: string;
		3916: string;
		3920: string;
		3934: string;
		3942: string;
		3952: string;
		3954: string;
		3955: string;
		3959: string;
		3964: string;
		3965: string;
		3968: string;
		3978: string;
		3987: string;
		3993: string;
		4004: string;
		4018: string;
		4026: string;
		4036: string;
		4046: string;
		40500: string;
		4057: string;
		4064: string;
		4085: string;
		4094: string;
		4102: string;
		4106: string;
		4115: string;
		4136: string;
		4137: string;
		4145: string;
		4150: string;
		4155: string;
		4158: string;
		4161: string;
		4162: string;
		4166: string;
		4168: string;
		4172: string;
		4175: string;
		4182: string;
		4184: string;
		4190: string;
		4191: string;
		4195: string;
		4202: string;
		42089: string;
		4231: string;
		42329: string;
		4234: string;
		4236: string;
		4242: string;
		4252: string;
		4255: string;
		42804: string;
		4291: string;
		4295: string;
		4305: string;
		4325: string;
		4328: string;
		4342: string;
		4345: string;
		4364: string;
		4376: string;
		4400: string;
		4434: string;
		4474: string;
		4486: string;
		44868: string;
		4508: string;
		4520: string;
		454187: string;
		4559: string;
		4562: string;
		4598: string;
		4604: string;
		4608: string;
		4637: string;
		4667: string;
		4684: string;
		4695: string;
		4700: string;
		4711: string;
		4726: string;
		4736: string;
		4747: string;
		4754: string;
		4758: string;
		4777: string;
		47827: string;
		4791: string;
		4821: string;
		4835: string;
		4840: string;
		4845: string;
		4853: string;
		4878: string;
		4885: string;
		492: string;
		49213: string;
		493: string;
		4947: string;
		4975: string;
		4994: string;
		5030: string;
		5055: string;
		5094: string;
		5125: string;
		51306: string;
		5153: string;
		5154: string;
		5160: string;
		5179: string;
		5186: string;
		5228: string;
		5230: string;
		5300: string;
		5310: string;
		5348: string;
		5350: string;
		5363: string;
		5372: string;
		5379: string;
		5382: string;
		5390: string;
		5395: string;
		5407: string;
		5411: string;
		5432: string;
		5502: string;
		552282: string;
		5537: string;
		5547: string;
		5577: string;
		5608: string;
		5611: string;
		5613: string;
		5652: string;
		56690: string;
		5673: string;
		5708: string;
		5711: string;
		5716: string;
		5727: string;
		5752: string;
		5765: string;
		5794: string;
		5796: string;
		5851: string;
		5900: string;
		5914: string;
		5923: string;
		5941: string;
		597: string;
		5981: string;
		5984: string;
		599: string;
		603297: string;
		6041: string;
		6052: string;
		6129: string;
		61357: string;
		615955: string;
		620519: string;
		6214: string;
		6276: string;
		6310: string;
		6378: string;
		6426: string;
		6506: string;
		6621: string;
		6625: string;
		6650: string;
		6691: string;
		6702: string;
		6730: string;
		6815: string;
		6869: string;
		6910: string;
		6915: string;
		6948: string;
		6971: string;
		699: string;
		701: string;
		7038: string;
		7107: string;
		7108: string;
		7113: string;
		71389: string;
		7178: string;
		7208: string;
		7250: string;
		7309: string;
		7328: string;
		7332: string;
		7368: string;
		7423: string;
		7432: string;
		745697: string;
		7478: string;
		7481: string;
		7556: string;
		7569: string;
		7622: string;
		769306: string;
		7702: string;
		7743: string;
		776177: string;
		7782: string;
		784: string;
		791774: string;
		7918: string;
		7926: string;
		7948: string;
		8013: string;
		8075: string;
		809: string;
		8093: string;
		8122: string;
		8253: string;
		8369: string;
		84: string;
		8461: string;
		847164: string;
		856791: string;
		8666: string;
		87: string;
		872: string;
		87918: string;
		8945: string;
		9: string;
		91114: string;
		9130: string;
		9157: string;
		916648: string;
		9204: string;
		92092: string;
		922563: string;
		9271: string;
		9541: string;
		9551: string;
		9564: string;
		9592: string;
		96359: string;
		97376: string;
		9803: string;
		9994: string;
	};
	m_msTagMapLoaded: number;
	m_privateAppsObserver: {
		listeners: Set<function>;
		options: {
			_defaulted: boolean;
			enabled: boolean;
			networkMode: string;
			queryFn(...args: any[]);
			queryHash: string;
			queryKey: string[];
			refetchOnReconnect: boolean;
			staleTime: number;
			throwOnError: boolean;
		};
		refetch(...args: any[]);
		subscribe(...args: any[]);

		bindMethods();
		createResult(e, t);
		destroy();
		fetch(e);
		fetchOptimistic(e);
		getCurrentQuery();
		getCurrentResult();
		getOptimisticResult(e);
		onQueryUpdate();
		onSubscribe();
		onUnsubscribe();
		setOptions(e, t);
		shouldFetchOnReconnect();
		shouldFetchOnWindowFocus();
		trackProp(e);
		trackResult(e, t);
		updateResult(e);
	};
	m_setPrivateApps: Set<number>;

	BIsAppPrivate(e);
	GetAlbumCoverURLForApp(e);
	GetAppOverviewByAppID(e);
	GetAppOverviewByGameID(e);
	GetCachedAlbumCoverURL(e);
	GetCachedVerticalCapsuleURL(e);
	GetCustomHeroImageURLs(e);
	GetCustomImageURLs(e, t);
	GetCustomLandcapeImageURLs(e);
	GetCustomLogoImageURLs(e);
	GetCustomSortAs(e);
	GetCustomVerticalCapsuleURLs(e);
	GetIconURLForApp(e);
	GetPregeneratedVerticalCapsuleForApp(e);
	GetStorePageURLForApp(e);
	GetTopStoreTags(e);
	GetVerticalCapsuleURLForApp(e);
	Init(e, t): Promise<any>;
	RefreshTagsIfNeeded();
	SetCustomSortAs(e, t): Promise<any>;
	UpdatePrivateApps(e);
}
